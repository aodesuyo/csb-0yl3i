{"version":3,"sources":["src/09modan.js"],"names":["name","age","sentense","console","log","modansentense","func1","func2","func3","func4","func5","func6"],"mappings":";AACA,IAAMA,EAAO,OACPC,EAAM,GAENC,EAAWF,EAAO,IAAMC,EAAM,MACpCE,QAAQC,IAAIF,GAEZ,IAAMG,EAAmBL,GAAAA,OAAAA,EAAQC,KAAAA,OAAAA,EAAjC,OACAE,QAAQC,IAAIC,GAGZ,IAAMC,EAAQ,SAAUN,GACZA,MAAAA,GAAAA,OAAAA,EAAV,QAGIO,EAAQ,SAACP,GACHA,MAAAA,GAAAA,OAAAA,EAAV,QAEFG,QAAQC,IAAIE,EAAM,SAClBH,QAAQC,IAAIG,EAAM,OAElB,IAAMC,EAAQ,SAACR,GACHA,MAAAA,GAAAA,OAAAA,EAAV,QAEFG,QAAQC,IAAII,EAAM,OAElB,IAAMC,EAAQ,SAACT,EAAMC,GACTD,MAAAA,GAAAA,OAAAA,EAAUC,OAAAA,OAAAA,EAApB,SAEFE,QAAQC,IAAIK,EAAM,KAAM,KAGxB,IAAMC,EAAQ,SAACV,GAAYA,MAAAA,GAAAA,OAAAA,EAAb,OACdG,QAAQC,IAAIM,EAAM,OAGlB,IAAMC,EAAQ,WAAO,MAAA,CACnBX,KAAM,OACNC,IAAK,KAEPE,QAAQC,IAAIO","file":"09modan.6f06482d.js","sourceRoot":"..","sourcesContent":["//文字列の連結\r\nconst name = \"テッくん\";\r\nconst age = 40;\r\n//従来の書き方\r\nconst sentense = name + \"は\" + age + \"歳です\";\r\nconsole.log(sentense);\r\n//テンプレート文字列\r\nconst modansentense = `${name}は${age}歳です`;\r\nconsole.log(modansentense);\r\n\r\n//関数定義\r\nconst func1 = function (name) {\r\n  return `${name}です!`;\r\n};\r\n//アロー関数だと\r\nconst func2 = (name) => {\r\n  return `${name}です!`;\r\n};\r\nconsole.log(func1(\"テッくん\"));\r\nconsole.log(func2(\"岡田\"));\r\n//アロー関数は引数が一つの場合()を省略できる\r\nconst func3 = (name) => {\r\n  return `${name}です!`;\r\n};\r\nconsole.log(func3(\"佐藤\"));\r\n//複数あるときは,で区切る\r\nconst func4 = (name, age) => {\r\n  return `${name}です。${age}歳です。`;\r\n};\r\nconsole.log(func4(\"田中\", 60));\r\n\r\n//処理が1行で終わるときは{}とreturnを省略可能\r\nconst func5 = (name) => `${name}です`;\r\nconsole.log(func5(\"山田\"));\r\n\r\n//{}を()で囲み1つの塊として認識させることも可能\r\nconst func6 = () => ({\r\n  name: \"テッくん\",\r\n  age: 40\r\n});\r\nconsole.log(func6());\r\n"]}